/***********************************************************
*
*   Create by Amur
*   Progress Bar And Other Opportunities
*   Github https://github.com/AmurKhoyetsyan/Progress-Bar
*
************************************************************/

"use strict";class GetterSetterParameters{constructor(t){this.elem=t}get Height(){if(this.elem)return parseFloat(this.elem.clientHeight)}set Height(t){this.elem&&("number"!=typeof t||isNaN(t)?"string"==typeof t&&(this.elem.style.height=t):this.elem.style.height=t+"px")}get Width(){if(this.elem)return parseFloat(this.elem.clientWidth)}set Width(t){this.elem&&("number"!=typeof t||isNaN(t)?"string"==typeof t&&(this.elem.style.width=t):this.elem.style.width=t+"px")}replaceAll(t,e,s){return t.split(e).join(s)}getCoefficient(t,e){return t>e?t/2>e?{parent:0,child:t/2-e}:{parent:0,child:0}:t<e&&e/2>t?{parent:e/2-t,child:0}:{parent:0,child:0}}}class SetOptions{_getOptions(t,e){if(t)for(let s in t)e[s]=t[s]}_setPercent(t,e){let s,i=(new GetterSetterParameters).replaceAll(e.progressCount,",",".");return isNaN(parseFloat(e.progressCount))||parseFloat(e.progressCount).toFixed(2)<=t&&(s=(100-100*parseFloat(i).toFixed(2)/t).toFixed(2)),s}}class Animation extends SetOptions{constructor(){super(),this.state={time:1e3/24}}_animatedText(t,e,s,i){let r=0,o=t/e*this.state.time;const l=(t,e)=>{let s=Math.ceil(t)>t?parseFloat(parseFloat(t).toFixed(2)):parseInt(t);return e?s+"%":s},a=()=>{(r+=o)>=t?s.innerHTML=l(t,i):(s.innerHTML=l(r,i),setTimeout(a,this.state.time))};a()}_animatedCircle(t,e,s,i){let r=t,o=Math.abs(e-t)/s*this.state.time;i.setAttribute("stroke-dashoffset",r);const l=()=>{(r-=o)<=e?i.setAttribute("stroke-dashoffset",e):(i.setAttribute("stroke-dashoffset",r),setTimeout(l,this.state.time))};l()}_animateTriangleAndCubic(t,e,s,i){let r=t,o=Math.abs(e-t);const l=()=>{let t=o/s*this.state.time;(r-=t)<=e?i.setAttribute("stroke-dashoffset",e):(i.setAttribute("stroke-dashoffset",r),setTimeout(l,this.state.time))};l()}}class CreateSvg extends Animation{_setText(t,e,s,i){let r,o=(new GetterSetterParameters).replaceAll(e.progressCount,",","."),l=document.createElementNS("http://www.w3.org/2000/svg","text");return l.setAttribute("fill",e.fontColor),l.setAttribute("x","50%"),l.setAttribute("font-size",e.fontSize),l.setAttribute("font-weight",e.fontWeight),l.setAttribute("alignment-baseline","middle"),l.setAttribute("text-anchor","middle"),"circle"===e.type&&l.setAttribute("transform","rotate(90,"+i+","+i+")"),"triangle"===e.type?l.setAttribute("y","70%"):l.setAttribute("y","50%"),isNaN(parseFloat(o))||parseFloat(o).toFixed(2)<=t&&(r=parseFloat(o).toFixed(2),e.animated?l.innerHTML=0:l.innerHTML=s?r+"%":r),e.animated&&this._animatedText(r,e.interval,l,s),l}_setCircle(t,e,s,i,r){let o=document.createElementNS("http://www.w3.org/2000/svg","circle");return o.setAttribute("fill",t),o.setAttribute("stroke",e),o.setAttribute("cx",r),o.setAttribute("cy",r),o.setAttribute("r",i),o.setAttribute("stroke-width",s),o.setAttribute("stroke-linecap","round"),o}_setTriangle(t,e,s,i,r,o){let l=document.createElementNS("http://www.w3.org/2000/svg","path");return l.setAttribute("d",`M ${i/2}, ${o-r/2} L ${i-(o-r/2)}, ${i-(o-r/2)} L ${o-r/2}, ${i-(o-r/2)} L ${i/2}, ${o-r/2} Z`),l.setAttribute("fill",t),l.setAttribute("stroke",e),l.setAttribute("stroke-width",s),l.setAttribute("stroke-linecap","round"),l}_setCubic(t,e,s,i,r,o){let l=document.createElementNS("http://www.w3.org/2000/svg","path");return l.setAttribute("d",`M ${o-r/2}, ${o-r/2} L ${i-(o-r/2)}, ${o-r/2} L ${i-(o-r/2)}, ${i-(o-r/2)} L ${o-r/2}, ${i-(o-r/2)} L ${o-r/2}, ${o-r/2} Z`),l.setAttribute("fill",t),l.setAttribute("stroke",e),l.setAttribute("stroke-width",s),l.setAttribute("stroke-linecap","square"),l}_setSvg(t,e,s,i){let r,o,l,a,n=new GetterSetterParameters(t),h=this._setPercent(s,e),d=document.createElementNS("http://www.w3.org/2000/svg","svg"),u=(new GetterSetterParameters).getCoefficient(e.strokeWidthParent,e.strokeWidthChild),p=Math.max(e.strokeWidthParent,e.strokeWidthChild);switch(d.setAttribute("height",n.Width),d.setAttribute("width",n.Width),d.setAttribute("viewBox",`0 0 ${n.Width} ${n.Width}`),e.type){case"circle":let t=(o=n.Width/2)-e.strokeWidthChild/2,s=2*Math.PI*t,i=s*h/100;d.setAttribute("transform","rotate(270)"),l=this._setCircle(e.fillParent,e.progressParentColor,e.strokeWidthParent,t,o),(a=this._setCircle(e.fillChild,e.progressColor,e.strokeWidthChild,t,o)).setAttribute("stroke-dasharray",s),e.animated?this._animatedCircle(s,i,e.interval,a):a.setAttribute("stroke-dashoffset",i);break;case"triangle":let c=(o=n.Width)-2*(p-u.child/2),m=Math.sqrt(Math.pow(c,2)+Math.pow(c/2,2)),g=m+m+c;r=g*h/100,l=this._setTriangle(e.fillParent,e.progressParentColor,e.strokeWidthParent,o,u.parent,p),(a=this._setTriangle(e.fillChild,e.progressColor,e.strokeWidthChild,o,u.child,p)).setAttribute("stroke-dasharray",`${g} , ${g}`),e.animated?this._animateTriangleAndCubic(g,r,e.interval,a):a.setAttribute("stroke-dashoffset",r);break;case"cubic":let f=4*((o=n.Width)-2*(p-u.child/2));r=f*h/100,l=this._setCubic(e.fillParent,e.progressParentColor,e.strokeWidthParent,o,u.parent,p),(a=this._setCubic(e.fillChild,e.progressColor,e.strokeWidthChild,o,u.child,p)).setAttribute("stroke-dasharray",`${f} , ${f}`),e.animated?this._animateTriangleAndCubic(f,r,e.interval,a):a.setAttribute("stroke-dashoffset",r);break;default:console.log("%c%s","color: red; font-size: 32px; font-weight: 700; text-transform: uppercase;","type not found")}try{if(d.appendChild(l),d.appendChild(a),e.text){let t=this._setText(s,e,i,o);d.appendChild(t)}}catch(t){console.log("%c%s","color: red; font-size: 32px; font-weight: 700; text-transform: uppercase;","ERROR VALIDATE",t)}return d}}class Progress extends CreateSvg{constructor(t,e=null){super(),this.elem=t,this.options=e,this.defaultOptions={type:"circle",text:!0,fontColor:"#000000",fontSize:16,fontWeight:400,fillParent:"none",fillChild:"none",interval:1e3,animated:!1,strokeWidthParent:3,strokeWidthChild:5,progressColor:"#00AAFF",progressParentColor:"#E0E0E0"}}inPercent(){if(this.elem)for(let t=0;t<this.elem.length;t++){let e={progressCount:this.elem[t].getAttribute("data-count")||null};this._getOptions(this.defaultOptions,e),this._getOptions(this.options,e);let s=this._setSvg(this.elem[t],e,100,!0);this.elem[t].append(s)}}inCounter(){if(this.elem)for(let t=0;t<this.elem.length;t++){let e={progressCount:this.elem[t].getAttribute("data-count")||null};this._getOptions(this.defaultOptions,e),this._getOptions(this.options,e);let s=this._setSvg(this.elem[t],e,parseFloat(e.progressCount),!1);this.elem[t].append(s)}}inCount(t){if(this.elem)for(let e=0;e<this.elem.length;e++){let s={progressCount:this.elem[e].getAttribute("data-count")||null};this._getOptions(this.defaultOptions,s),this._getOptions(this.options,s);let i=this._setSvg(this.elem[e],s,t,!1);this.elem[e].append(i)}}}